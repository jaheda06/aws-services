#!/bin/bash

# Variables
VPC_NAME="Test-vpc"
CIDR_BLOCK="10.0.0.0/16"
REGION="ap-soth-1"
AMI_ID="ami-12345678"  
INSTANCE_TYPE="t2.micro"
KEY_NAME="jasi-key"  

# Create VPC
VPC_ID=$(aws ec2 create-vpc --cidr-block 10.0.0.0/16aaa --region $REGION --query 'Vpc.VpcId' --output text)
echo "VPC created with ID: $VPC_ID"

# Tag the VPC
aws ec2 create-tags --resources $VPC_ID --tags Key=Name,Value=$VPC_NAME --region $REGION

# Create an Internet Gateway (IGW) and attach it to the VPC
IGW_ID=$(aws ec2 create-internet-gateway --region $REGION --query 'InternetGateway.InternetGatewayId' --output text)
aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID --region $REGION
echo "Internet Gateway created with ID: $IGW_ID"

# Create Public Subnets
SUBNET_PUBLIC_IDS=()
for i in {1..3}; do
  SUBNET_PUBLIC_ID=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block "10.0.${i}.0/24" --availability-zone "${REGION}a" --query 'Subnet.SubnetId' --output text)
  aws ec2 create-tags --resources $SUBNET_PUBLIC_ID --tags Key=Name,Value="public-subnet-${i}" --region $REGION
  SUBNET_PUBLIC_IDS+=($SUBNET_PUBLIC_ID)
  echo "Public Subnet $i created with ID: $SUBNET_PUBLIC_ID"
done

# Create Private Subnets
SUBNET_PRIVATE_IDS=()
for i in {1..3}; do
  SUBNET_PRIVATE_ID=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block "10.0.$((i+3)).0/24" --availability-zone "${REGION}b" --query 'Subnet.SubnetId' --output text)
  aws ec2 create-tags --resources $SUBNET_PRIVATE_ID --tags Key=Name,Value="private-subnet-${i}" --region $REGION
  SUBNET_PRIVATE_IDS+=($SUBNET_PRIVATE_ID)
  echo "Private Subnet $i created with ID: $SUBNET_PRIVATE_ID"
done

# Create a Public Route Table and associate it with public subnets
ROUTE_TABLE_PUBLIC_ID=$(aws ec2 create-route-table --vpc-id $VPC_ID --region $REGION --query 'RouteTable.RouteTableId' --output text)
aws ec2 create-route --route-table-id $ROUTE_TABLE_PUBLIC_ID --destination-cidr-block 0.0.0.0/0 --gateway-id $IGW_ID --region $REGION
echo "Public Route Table created with ID: $ROUTE_TABLE_PUBLIC_ID"

# Associate public subnets with the public route table
for SUBNET_PUBLIC_ID in "${SUBNET_PUBLIC_IDS[@]}"; do
  aws ec2 associate-route-table --route-table-id $ROUTE_TABLE_PUBLIC_ID --subnet-id $SUBNET_PUBLIC_ID --region $REGION
  echo "Public Subnet $SUBNET_PUBLIC_ID associated with Public Route Table"
done

# Allocate Elastic IP for the NAT Gateway
EIP_ALLOC_ID=$(aws ec2 allocate-address --domain vpc --region $REGION --query 'AllocationId' --output text)
echo "Elastic IP allocated with ID: $EIP_ALLOC_ID"

# Create a NAT Gateway in the first public subnet
NGW_ID=$(aws ec2 create-nat-gateway --subnet-id ${SUBNET_PUBLIC_IDS[0]} --allocation-id $EIP_ALLOC_ID --region $REGION --query 'NatGateway.NatGatewayId' --output text)
echo "NAT Gateway created with ID: $NGW_ID"

# Wait for the NAT Gateway to become available
echo "Waiting for NAT Gateway to become available..."
aws ec2 wait nat-gateway-available --nat-gateway-ids $NGW_ID --region $REGION
echo "NAT Gateway is now available"

# Create a Private Route Table and associate it with private subnets
ROUTE_TABLE_PRIVATE_ID=$(aws ec2 create-route-table --vpc-id $VPC_ID --region $REGION --query 'RouteTable.RouteTableId' --output text)
aws ec2 create-route --route-table-id $ROUTE_TABLE_PRIVATE_ID --destination-cidr-block 0.0.0.0/0 --nat-gateway-id $NGW_ID --region $REGION
echo "Private Route Table created with ID: $ROUTE_TABLE_PRIVATE_ID"

# Associate private subnets with the private route table
for SUBNET_PRIVATE_ID in "${SUBNET_PRIVATE_IDS[@]}"; do
  aws ec2 associate-route-table --route-table-id $ROUTE_TABLE_PRIVATE_ID --subnet-id $SUBNET_PRIVATE_ID --region $REGION
  echo "Private Subnet $SUBNET_PRIVATE_ID associated with Private Route Table"
done

# Launch EC2 instances in the first public and private subnets
INSTANCE_PUBLIC_ID=$(aws ec2 run-instances --image-id $AMI_ID --instance-type $INSTANCE_TYPE --key-name $KEY_NAME --subnet-id ${SUBNET_PUBLIC_IDS[0]} --associate-public-ip-address --region $REGION --query 'Instances[0].InstanceId' --output text)
echo "Public EC2 instance launched with ID: $INSTANCE_PUBLIC_ID"

INSTANCE_PRIVATE_ID=$(aws ec2 run-instances --image-id $AMI_ID --instance-type $INSTANCE_TYPE --key-name $KEY_NAME --subnet-id ${SUBNET_PRIVATE_IDS[0]} --region $REGION --query 'Instances[0].InstanceId' --output text)
echo "Private EC2 instance launched with ID: $INSTANCE_PRIVATE_ID"

# Tag EC2 instances
aws ec2 create-tags --resources $INSTANCE_PUBLIC_ID --tags Key=Name,Value="public-ec2-instance" --region $REGION
aws ec2 create-tags --resources $INSTANCE_PRIVATE_ID --tags Key=Name,Value="private-ec2-instance" --region $REGION
echo "EC2 instances tagged"

echo "VPC, Subnets, IGW, NGW, Route Tables, and EC2 setup is complete."
